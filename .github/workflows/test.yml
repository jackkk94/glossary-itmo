name: ci/cd

on:
  push:
    branches: ['master']
env:
  CR_REGISTRY: crpgdibs74khufptbu4j
  IMAGE_TAG_FRONTEND: frontend


jobs:
  Frontend:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./client/
    strategy:
          matrix:
            node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}

      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'
    - name: install dependencies
      run: npm ci
    - name: install dependencies
      run: npm ci
    - name: run lint
      run: npm run lint
    - name: run test
      run: npm run test 


  Backend:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./backend/
    strategy:
          matrix:
            node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}

      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    - name: install dependencies
      run: npm ci
    - name: run lint
      run: npm run lint
    - name: run test
      run: npm run test 


  build:
    needs: [Backend]
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./client/
    steps:
      - uses: actions/checkout@v2
      - name: Yandex Cloud CR "Login"
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t cr.yandex/${{env.CR_REGISTRY}}:${{env.IMAGE_TAG_FRONTEND}} .
          docker push cr.yandex/${{env.CR_REGISTRY}}:${{env.IMAGE_TAG_FRONTEND}}